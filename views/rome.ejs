<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        body {
            background-image: url("/background3.jpg");
            background-repeat: no-repeat;
            background-size: 100%;
        }
        h1 {
            color: white;
            text-align: center;
            -webkit-text-stroke: 1px blue;
        }
        .container1 {
            position: fixed;
            left: 50px;
            top: 150px;
            color: white;
        }
        .container2 {
            position: fixed;
            left: 300px;
            top: 150px;
            color: white;
            width: 300px;
            text-align: justify;
            text-justify: inter-word;
        }
        .video {
            position: fixed;
            left: 700px;
            top: 150px;
            color: white;
            width: 480px;
            height: 360px;
        }
        .wanttogo {
            position: fixed;
            left: 30px;
            top: 470px;
        }

        .alert-container {
            position: fixed;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: auto;
            max-width: 400px;
            display: flex;
            flex-direction: column;
            gap: 10px; /* Space between multiple alerts */
            align-items: center; /* Center align content */
            text-align: center; /* Center align text inside alerts */
        }


    </style>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%= name %></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-2">
        <a class="navbar-brand" style="color: rgb(191, 255, 161)"><%= name %></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
            </ul>
            <form method="POST" action='/search' class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" name="Search" type="search" placeholder="Search"
                    aria-label="Search">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </nav>
    <div class="container1">
        <img id="image" src="<%= image %>" width="193" height="300">
    </div>
    <div class="container2">
        <%= description %>
    </div>
        <button class="btn btn-success add-to-list" data-destination="<%= name %>">Add to Want-to-Go List</button>
    
    <div class="video">
        <iframe width="480" height="360" src="<%= videoUrl %>" 
                title="<%= name %> Video" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
        </iframe>                   
    </div>

    <div class="alert-container"></div>



    <script>
          document.querySelectorAll('.add-to-list').forEach(button => {
            button.addEventListener('click', async (event) => {
            const destinationName = event.target.dataset.destination;

            try {
                const response = await fetch('/add-to-want-to-go', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ destinationName }),
                });

                if (response.ok) {
                    showBootstrapAlert("Destination added to your Want-to-Go List!", "success");
                } else {
                    const errorData = await response.json();
                    showBootstrapAlert(errorData.error || "Failed to add destination.", "danger");
                }
            } catch (error) {
                console.error("Error adding to Want-to-Go List:", error);
                showBootstrapAlert("Error adding to Want-to-Go List.", "danger");
            }
        });
    });

    function showBootstrapAlert(message, type = "danger") {
        const alertContainer = document.querySelector('.alert-container');
        
        // Create the alert element
        const alert = document.createElement('div');
        alert.className = `alert alert-${type} alert-dismissible fade show`;
        alert.role = "alert";
        alert.innerHTML = `
            <strong>${type.charAt(0).toUpperCase() + type.slice(1)}!</strong> ${message}
        `;

        // Append the alert to the container
        alertContainer.appendChild(alert);

        // Automatically remove the alert after 3 seconds
        setTimeout(() => {
            alert.classList.remove('show');
            alert.addEventListener('transitionend', () => alert.remove());
        }, 3000);
    }


    </script>
    
</body>
</html>
